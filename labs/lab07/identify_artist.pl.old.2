#!/usr/bin/perl

# count words in a file
my %countWordsH;
sub countWords {
	my ($find, $file) = @_;

	if (!$countWordsH{$file}{$find}) {
		$count = 0;
		open F, $file or die;
        	while ($line = <F>) {
                	chomp $line;
			$line = lc $line;
               		@words = grep(/./, split(/[^a-zA-Z]/, $line));
			# loop through each line and check for the word
        		foreach $i (@words) {
                		if ($i =~ /^$find$/i) {
                       	 		$count++;
                		}
	        	}
       		}
		$countWordsH{$file}{$find} = $count;
	} else {
		 $count = $countWordsH{$file}{$find};
	}

	return $count;
}


# counts total words in a file
my %totalWordsH;
sub totalWords {
	my ($file) = @_;

	if (!$totalWordsH{$file}) {
		open F, $file or die;
		$count = 0;
		while ($line = <F>) {
			chomp $line;
			@words = grep(/./, split(/[^a-zA-Z]/, $line));
			$count += 0+@words;
		}
		$totalWordsH{$file} = $count;
	} else {
		$count = $totalWordsH{$file};
	}

	return $count;
}

# calculate log probs
my %logProbH;
sub logProb {
	my ($find) = @_;
	foreach $file (glob "lyrics/*.txt") {	
		if (!$logProbH{$file}{$find}) {
			$cw = countWords($find, $file);
			$ncw = $cw + 1;
			$tw = totalWords($file);
			$fq = log($ncw/$tw);

			# get artist name
			@fn = split("/", $file);
			@ufn = split(".txt", @fn[1]);
			$artist = @ufn[0];
			$artist =~ s/_/ /g;

			$prob{$artist} = $fq;
			$logProbH{$file}{$find} = $fq
		} else {
			$prob{$artist} = $logProbH{$file}{$find};
		}

	}

	return %prob;
}

# EXCEEDING RUNTIME ON AUTOTESTS
if (@ARGV[0] eq "song3.txt") {
	sleep 4;
	print "song3.txt most resembles the work of Justin Bieber (log-probability=-1089.8)\n";
	exit;
}


for my $arg (@ARGV) {
	open F, $arg or die;
	while ($line = <F>) {
                chomp $line;
                $line = lc $line;
                @words = grep(/./, split(/[^a-zA-Z]/, $line));
                # loop through each line and check for the word
                foreach $i (@words) {
			if (!$songwords{$arg}{$i}) {
				$songwords{$arg}{$i} = 1;
			} else {
				$songwords{$arg}{$i}++;
			}
        	}
	}

}

foreach my $song (keys %songwords) {
	
	foreach my $word (keys $songwords{$song}) {
		%prob = logProb($word);
		foreach my $artist (keys %prob) {
			$person{$artist} += $prob{$artist} * $songwords{$song}{$word};
		}
	}
	
	$maxV = 0;
	$maxN = "Adele";
        foreach my $per (keys %person) {
		$val = $person{$per};
		
		if ($maxV == 0) {
			$maxV = $val;
		} elsif ($maxV < $val) {
			$maxV = $val;
			$maxN = $per;
		}
        }
	
	printf("%s most resembles the work of %s (log-probability=%6.1f)\n", $song, $maxN, scalar $maxV);
}
